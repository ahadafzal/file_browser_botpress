{"version":3,"sources":["PreAppp.js","PreApp.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","useStyles","makeStyles","root","height","flexGrow","maxWidth","RecursiveTreeView2","dir","execute","isd","Name","useState","path","name","data","setData","useEffect","children","client","W3CWebSocket","onmessage","message","JSON","parse","onopen","send","stringify","classes","TreeView","onClick","className","rooot","defaultCollapseIcon","defaultExpandIcon","renderTree","nodes","hasOwnProperty","isDir","fileicon","getIconForFile","src","width","TreeItem","nodeId","label","Array","isArray","map","node","RecursiveTreeView","theme","paper","padding","spacing","color","palette","text","secondary","Rendererer","setDir","axios","get","then","res","Grid","container","item","xs","Paper","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db4a253a.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { getIconForFile } from 'vscode-icons-js';\n\n\n\n\nconsole.log(\"start\");\n/// console.log(data);\nconst useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400\n  }\n});\n\nexport default function RecursiveTreeView2({dir,execute,isd,Name}) {\n  const [ data, setData ] = useState({path:'root',name:dir});\n  \n  \n\n\n  useEffect( () => {\n    if (isd){\n      setData({path:'root',name:Name,children:[{path:dir,name:'loading..'}]})\n    }\n    if (execute === false){\n      return \n    }\n    const client = new W3CWebSocket('ws://127.0.0.1:3000');\n    client.onmessage = (message) => {\n      setData({path:\"root\",name:Name,children:JSON.parse(message.data)});\n    };\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n      client.send(JSON.stringify({dir:dir}))\n    };\n    \n    \n    \n }, []);\n  const classes = useStyles();\n\n  const loadDir = () => {\n    const client = new W3CWebSocket('ws://127.0.0.1:3000');\n    client.onmessage = (message) => {\n      setData({path:\"root\",name:Name,children:JSON.parse(message.data)});\n    };\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n      client.send(JSON.stringify({dir:dir}))\n    };\n    \n    \n    \n }\n\n  const renderTree = (nodes) => {\n    if (nodes.hasOwnProperty('isDir') && nodes.isDir === true){\n      return <RecursiveTreeView2 dir={nodes.path} Name={nodes.name} execute={false} onClick={() => console.log('hi')} isd={true}></RecursiveTreeView2>\n    }\n    let fileicon = './icons/' + getIconForFile(nodes.name)\n    if (fileicon !== './icons/default_file.svg'){\n      fileicon = <div><img src={fileicon} width='20px'/>{nodes.name}</div>\n    }\n    else{\n        fileicon = nodes.name\n    }\n    return (\n      <TreeItem key={nodes.path} nodeId={nodes.path}  label={fileicon}>\n        {Array.isArray(nodes.children)\n          ? nodes.children.map((node) => renderTree(node))\n          : null}\n      </TreeItem>\n    )\n  };\n\n  return (\n    <TreeView\n      onClick={loadDir}\n      className={classes.rooot}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      // defaultExpanded={[\"root\"]}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      {renderTree(data)}\n    </TreeView>\n  );\n}\n","import React, { useState,useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport RecursiveTreeView2 from './PreAppp';\nimport { getIconForFile } from 'vscode-icons-js';\n\n\nconsole.log(\"start\");\n/// console.log(data);\nconst useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400\n  }\n});\n\nexport default function RecursiveTreeView({dir,execute,isd}) {\n  const [ data, setData ] = useState({path:'root',name:dir});\n  \n  \n\n\n  useEffect( () => {\n    if (isd){\n      setData({path:'root',name:dir,children:[{path:dir,name:'loading..'}]})\n    }\n    if (execute === false){\n      return \n    }\n    const client = new W3CWebSocket('ws://127.0.0.1:3000');\n    client.onmessage = (message) => {\n      setData({path:\"root\",name:dir,children:JSON.parse(message.data)});\n    };\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n      client.send(JSON.stringify({dir:dir}))\n    };\n    \n    \n    \n }, []);\n  const classes = useStyles();\n\n\n\n  const renderTree = (nodes) => {\n    if (nodes.hasOwnProperty('isDir') && nodes.isDir === true){\n      return <RecursiveTreeView2 dir={nodes.path} Name={nodes.name} execute={false} onClick={()=>{}} isd={true}></RecursiveTreeView2>\n    }\n    \n    let fileicon = './icons/' + getIconForFile(nodes.name)\n    if (fileicon !== './icons/default_file.svg'){\n      fileicon = <div><img src={fileicon} width='20px'/>{nodes.name}</div>\n    }\n    else{\n        fileicon = nodes.name\n    }\n\n    return (\n      \n      <TreeItem key={nodes.path} nodeId={nodes.path} label={fileicon}>\n        \n        {Array.isArray(nodes.children)\n          ? nodes.children.map((node) => renderTree(node))\n          : null}\n      </TreeItem>\n    )\n  };\n\n  return (\n    <TreeView\n      className={classes.rooot}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      {renderTree(data)}\n    </TreeView>\n  );\n}\n","import React, { useState,useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RecursiveTreeView from './PreApp'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n\n  \n\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    // textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Rendererer() {\n  const classes = useStyles();\n  const [ dir, setDir ] = useState(['.']);\n\n  useEffect( () => {\n    axios.get('http://localhost:3000/dirs').then(res => {\n      console.log(res.data)\n      setDir(res.data)\n    })\n    \n }, []);\n\n  return (\n\n\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n        <Paper className={classes.paper}>Live File Tree</Paper>\n        </Grid>\n        {dir.map((d) => (\n          <Grid item xs={6}>\n          <Paper className={classes.paper}><RecursiveTreeView dir={d} execute={true}></RecursiveTreeView></Paper>\n        </Grid>\n        ))}\n      </Grid>\n\n      \n    \n   \n    {/* <RecursiveTreeView></RecursiveTreeView> */}\n    </div>\n\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}